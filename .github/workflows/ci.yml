name: CI
permissions: {}
on:
- push
- pull_request
jobs:

  nose:
    runs-on: ubuntu-22.04
    steps:
    - name: set up Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: 3.8
    - name: pip install wheel
      run: |
        python3 -m pip install wheel
    - name: build wheel
      run: |
        python3 -m pip wheel --no-binary ':all:' nose
    - name: upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: nose
        path: nose-*.whl
        compression-level: 0
        retention-days: 1

  main:
    strategy:
      matrix:
        include:
        - python: '3.8'
          os: ubuntu-22.04
        - python: '3.9'
          os: ubuntu-22.04
        - python: '3.10'
          os: ubuntu-22.04
        - python: '3.11'
          os: ubuntu-22.04
        - python: '3.12'
          os: ubuntu-22.04
        - python: '3.13'
          os: ubuntu-24.04
        - python: '3.14'
          os: ubuntu-24.04
    runs-on: ${{matrix.os}}
    needs: nose
    steps:
    - uses: actions/checkout@v4
    - name: set up PATH
      run: |
        PATH+=:~/.local/bin
        echo "$PATH" >> $GITHUB_PATH
    - name: set up APT
      run: |
        printf 'Apt::Install-Recommends "false";\n' | sudo tee -a /etc/apt/apt.conf
        sudo apt-get update
    - name: set up Python ${{matrix.python}}
      uses: actions/setup-python@v5
      with:
        python-version: ${{matrix.python}}
    - name: set up distutils
      run: |
        if ! [ -d ${{env.pythonLocation}}/lib/python*/distutils/ ]; then
          python3 -m pip install setuptools
          echo SETUPTOOLS_USE_DISTUTILS=local | tee -a $GITHUB_ENV;
        fi
    - name: install deps
      run: |
        sudo apt-get install -y libsane-dev sane-utils
        python3 -m pip install pillow
        python3 -m pip install python-sane
        python3 -m pip install jinja2
        if ! [ -d ${{env.pythonLocation}}/lib/python*/distutils/version.py ]; then
          python3 -m pip install looseversion
        fi
    - name: download nose
      uses: actions/download-artifact@v4
      with:
        name: nose
    - name: install nose
      run: |
        python3 -m pip install nose-*.whl
        # work-around for <https://github.com/nose-devs/nose/issues/1116>:
        sed -i -e 's/ from unittest import _TextTestResult$/ from unittest import TextTestResult as _TextTestResult/' ${{env.pythonLocation}}/lib/python*/site-packages/nose/result.py
        if ! python3 -c 'import imp'; then
          python3 -m pip install zombie-imp
        fi
        python3 -m pip install nose
    - name: run tests
      run: |
        python3 -m nose -v
      timeout-minutes: 1
    - name: build docs
      run: |
        make
    - name: check docs
      run: |
        dpkg-parsechangelog -ldoc/changelog --all 2>&1 >/dev/null | { ! grep .; }
        python3 -m pip install docutils
        private/check-rst
    - name: run pydiatra
      run: |
        python3 -m pip install pydiatra
        python3 -m pydiatra --verbose .
    - name: run pyflakes
      run: |
        python3 -m pip install pyflakes
        python3 -m pyflakes .
    - name: run pylint
      run: |
        python3 -m pip install pylint
        private/run-pylint
    - name: install
      run: |
        make install PREFIX=~/.local
    - name: check whether the executable was installed correctly
      run: |
        cd /
        scanhelper --version
        scanhelper --help

# vim:ts=2 sts=2 sw=2 et
